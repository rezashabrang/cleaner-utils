name: Publish cleaning-utils package to PyPI and TestPyPI

on: push

jobs:
  build-n-publish:
    name: Build and publish cleaning-utils package to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: make poetry-download
    - name: Set up cache
      uses: actions/cache@v2.1.7
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install
    - name: Check codestyle
      run: |
        make check-codestyle
    - name: Run tests
      run: |
        make test
    - name: Run coverage
      run: |
        make coverage
    - name: Run safety checks
      run: |
        make check-safety
    - name: Run mypy checks
      run: |
        poetry run mypy --config-file pyproject.toml --install-types --non-interactive
        poetry run mypy --config-file pyproject.toml ./
    - name: Run complexity
      run: |
        make complexity
    - name: Run maintainability
      run: |
        make maintainability
    - name: Run interrogate
      run: |
        make interrogate
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    # - name: Publish distribution ðŸ“¦ to Test PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

